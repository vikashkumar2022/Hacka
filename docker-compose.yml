version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: blockchain_files_db
    environment:
      POSTGRES_DB: blockchain_files
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - blockchain_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: blockchain_files_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - blockchain_network
    command: redis-server --appendonly yes

  # IPFS Node
  ipfs:
    image: ipfs/kubo:latest
    container_name: blockchain_files_ipfs
    environment:
      - IPFS_PROFILE=server
    volumes:
      - ipfs_staging:/export
      - ipfs_data:/data/ipfs
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
    networks:
      - blockchain_network

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blockchain_files_app
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/blockchain_files
      - REDIS_URL=redis://redis:6379/0
      - IPFS_API_URL=http://ipfs:5001
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-this
      - WEB3_PROVIDER_URL=https://sepolia.infura.io/v3/YOUR_INFURA_KEY
      - CONTRACT_ADDRESS=0x1234567890123456789012345678901234567890
      - PRIVATE_KEY=your-private-key-for-contract-interaction
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      ipfs:
        condition: service_started
    networks:
      - blockchain_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: blockchain_files_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    networks:
      - blockchain_network
    restart: unless-stopped

  # Blockchain Network Monitor (optional)
  ganache:
    image: trufflesuite/ganache:latest
    container_name: blockchain_files_ganache
    ports:
      - "8545:8545"
    command: >
      ganache
      --host 0.0.0.0
      --accounts 10
      --deterministic
      --mnemonic "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about"
      --networkId 1337
      --chainId 1337
    networks:
      - blockchain_network
    profiles:
      - development

volumes:
  postgres_data:
  redis_data:
  ipfs_staging:
  ipfs_data:

networks:
  blockchain_network:
    driver: bridge
